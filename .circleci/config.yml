# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  build: 
    docker:
      - image: cimg/elixir:1.13.4
        environment:
          MIX_ENV: test

    steps:
      - checkout

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          key: deps-cache-{{ checksum "mix.lock"}}

      - run: mix --version
      - run: mix do deps.get, deps.compile
      - save_cache:
          key: deps-cache-{{ checksum "mix.lock"}}
          paths:
            - deps
            - ~/.mix
            - _build
          
      - run: mix deps.compile

      - run: echo "$OTP_VERSION $ELIXIR_VERSION" > .version_file
      - restore_cache:
          keys:
            - plt-cache-{{ checksum ".version_file"}}-{{ checksum "mix.lock"}}
          paths:
            - _build
            - deps
            - ~/.mix



## this is the demo code

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
#   say-hello:
#     # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#     steps:
#       - checkout
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"

# # Invoke jobs via workflows
# # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#       - say-hello
